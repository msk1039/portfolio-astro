---
import Container from '@/components/Container.astro'
import Link from '@/components/Link.astro'
import { NAV_LINKS, SITE } from '@/consts'

const currentPath = Astro.url.pathname;
---

<header
  class="sticky top-0 z-10 bg-transparent backdrop-blur-md bg-[#fcf3e6]"
  transition:persist
  data-current-path={currentPath}
>
  <Container>
    <div class="flex flex-wrap items-center justify-between gap-4 py-4">
      <Link
        href="/"
        class="flex flex-shrink-0 items-center gap-2 text-xl font-semibold transition-colors duration-300 hover:text-primary"
      >
        {SITE.TITLE}
      </Link>
      <div class="flex items-center gap-2 md:gap-4">
        <nav class="items-center flex gap-1 text-sm md:flex">
          {
            NAV_LINKS.map((item, index) => (
              <>
                <Link
                  href={item.href}
                  data-nav-link
                  class={`capitalize font-satoshi font-medium transition-colors hover:text-[#f19d4f]/80 text-[16px] ${
                    currentPath === item.href ? 'text-[#f19d4f]' : 'text-[#222222]'
                  }`}
                >
                  {item.label}
                </Link>
                {index !== NAV_LINKS.length - 1 && <span class="text-[#222222]"> / </span>}
              </>
            ))
          }
        </nav>
      </div>
    </div>
  </Container>
</header>

<script>
  function updateNavLinks() {
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll('[data-nav-link]');
    
    navLinks.forEach(link => {
      const href = link.getAttribute('href');
      if (href === currentPath) {
        link.classList.remove('text-[#222222]');
        link.classList.add('text-[#f19d4f]');
      } else {
        link.classList.remove('text-[#f19d4f]');
        link.classList.add('text-[#222222]');
      }
    });
  }

  // Update on view transitions
  document.addEventListener('astro:page-load', updateNavLinks);
  
  // Initial update
  updateNavLinks();
</script>